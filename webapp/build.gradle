group = 'cn.elvea.lxp'
version = '1.0.0'

dependencies {
    // spring boot
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-amqp")
    implementation("org.springframework.boot:spring-boot-starter-mail")
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("org.springframework.boot:spring-boot-starter-quartz")
    implementation("org.springframework.boot:spring-boot-starter-log4j2")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-undertow")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
    implementation("org.springframework.boot:spring-boot-starter-data-elasticsearch")
    // spring boot 3rd party
    implementation("de.codecentric:spring-boot-admin-starter-client:${springBootAdminVersion}")
    implementation("com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}")
    // lombok
    implementation("org.projectlombok:lombok")
    testImplementation("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    // commons
    implementation("commons-io:commons-io:${commonsIoVersion}")
    implementation("commons-codec:commons-codec:${commonsCodecVersion}")
    implementation("org.apache.commons:commons-text:${commonsTextVersion}")
    implementation("org.apache.commons:commons-lang3:${commonsLangVersion}")
    implementation("org.apache.commons:commons-compress:${commonsCompressVersion}")
    implementation("org.apache.commons:commons-collections4:${commonsCollectionsVersion}")
    // 3rd party
    implementation("joda-time:joda-time")
    implementation("mysql:mysql-connector-java")
    implementation("org.ow2.asm:asm:${asmVersion}")
    implementation("com.squareup.okio:okio:${okIoVersion}")
    implementation("com.google.guava:guava:${guavaVersion}")
    implementation("com.squareup.okhttp3:okhttp:${okhttpVersion}")
    implementation("com.nimbusds:nimbus-jose-jwt:${nimbusJoseJwtVersion}")
    // poi & easyexcel
    implementation("org.apache.poi:poi:${poiVersion}")
    implementation("org.apache.poi:poi-ooxml:${poiVersion}")
    implementation("com.alibaba:easyexcel:${easyExcelVersion}")
    // jodconverter & libreoffice
    implementation("org.libreoffice:juh:${libreofficeVersion}")
    implementation("org.libreoffice:jurt:${libreofficeVersion}")
    implementation("org.libreoffice:ridl:${libreofficeVersion}")
    implementation("org.libreoffice:unoil:${libreofficeVersion}")
    implementation("org.jodconverter:jodconverter-local:${jodconverterVersion}")
    implementation("org.jodconverter:jodconverter-spring-boot-starter:${jodconverterVersion}")
    // development
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    // test
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}
